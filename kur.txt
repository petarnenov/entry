
 DEV  v2.1.3 /home/petar/vite/entry
      Browser runner started by playwright at http://localhost:5173/

 âœ“ src/hooks/useCounter.test.jsx > useCounter > should initialize the counter with the provided initial value
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should initialize the counter with 1 when no initial value is provided
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should increment the counter by 1 when calling the increment function
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should return the correct count value after multiple decrements
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should handle alternating increment and decrement calls correctly
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should return an object with count, increment, and decrement properties
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should maintain separate state for multiple instances of useCounter
 âœ“ src/App.test.jsx > App > renders HelloWorld component
 âœ“ src/App.test.jsx > App > renders without console warnings or errors
 âœ“ src/api/users.test.js > User API > fetchUsers should fetch all users
 âœ“ src/api/users.test.js > User API > fetchUserById should fetch a user by ID
 âœ“ src/api/users.test.js > User API > createUser should create a new user
 âœ“ src/api/users.test.js > User API > updateUser should update a user by ID
 âœ“ src/api/users.test.js > User API > deleteUser should delete a user by ID
 âœ“ src/HelloWorld.test.jsx > HelloWorld > renders name
 âœ“ src/HelloWorld.test.jsx > HelloWorld > renders default name
 âœ“ src/components/Button.test.jsx > Button > renders a button with the provided children text
 âœ“ src/HelloWorld.test.jsx > HelloWorld > increments counter multiple times
 âœ“ src/components/Button.test.jsx > Button > calls onClick function when button is clicked
 âœ“ src/HelloWorld.test.jsx > HelloWorld > renders with empty string name
 âœ“ src/HelloWorld.test.jsx > HelloWorld > validates prop types
 âœ“ src/HelloWorld.test.jsx > HelloWorld > validates prop-types import
 âœ“ src/components/Button.test.jsx > Button > should disable the button when the disabled prop is true

 Test Files  5 passed (5)
      Tests  23 passed (23)
   Start at  01:36:13
   Duration  3.94s (transform 0ms, setup 0ms, collect 1.89s, tests 1.11s, environment 0ms, prepare 890ms)


 PASS  Waiting for file changes...
       press h to show help, press q to quit
c[3J
 RERUN  rerun all tests

 âœ“ src/App.test.jsx > App > renders HelloWorld component
 âœ“ src/App.test.jsx > App > renders without console warnings or errors
 âœ“ src/api/users.test.js > User API > fetchUsers should fetch all users
 âœ“ src/api/users.test.js > User API > fetchUserById should fetch a user by ID
 âœ“ src/api/users.test.js > User API > createUser should create a new user
 âœ“ src/api/users.test.js > User API > updateUser should update a user by ID
 âœ“ src/api/users.test.js > User API > deleteUser should delete a user by ID
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should initialize the counter with the provided initial value
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should initialize the counter with 1 when no initial value is provided
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should increment the counter by 1 when calling the increment function
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should return the correct count value after multiple decrements
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should handle alternating increment and decrement calls correctly
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should return an object with count, increment, and decrement properties
 âœ“ src/hooks/useCounter.test.jsx > useCounter > should maintain separate state for multiple instances of useCounter
 âœ“ src/HelloWorld.test.jsx > HelloWorld > renders name
 âœ“ src/HelloWorld.test.jsx > HelloWorld > renders default name
 âœ“ src/HelloWorld.test.jsx > HelloWorld > increments counter multiple times
 âœ“ src/HelloWorld.test.jsx > HelloWorld > renders with empty string name
 âœ“ src/HelloWorld.test.jsx > HelloWorld > validates prop types
 âœ“ src/HelloWorld.test.jsx > HelloWorld > validates prop-types import
 âœ“ src/components/Button.test.jsx > Button > renders a button with the provided children text
 âœ“ src/components/Button.test.jsx > Button > calls onClick function when button is clicked
 âœ“ src/components/Button.test.jsx > Button > should disable the button when the disabled prop is true

 Test Files  5 passed (5)
      Tests  23 passed (23)
   Start at  01:36:31
   Duration  1.62s


 PASS  Waiting for file changes...
       press h to show help, press q to quit
Cancelling test run. Press CTRL+c again to exit forcefully.

